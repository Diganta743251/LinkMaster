# This file was generated using Kotlin DSL (.github/workflows/build-nightly.main.kts).
# If you want to modify the workflow, please change the Kotlin file and regenerate this YAML file.
# Generated with https://github.com/typesafegithub/github-workflows-kt

name: 'Build nightly APK'
on:
  workflow_dispatch: {}
  push:
    paths-ignore:
    - '*.md'
    tags:
    - 'nightly-*'
env:
  BUILD_FLAVOR: 'foss'
  BUILD_TYPE: 'nightly'
  BUILD_FLAVOR_TYPE: 'fossNightly'
jobs:
  unit-tests:
    name: 'Unit tests'
    runs-on: 'ubuntu-latest'
    steps:
    - id: 'step-0'
      uses: 'actions/checkout@v4'
      with:
        fetch-depth: '0'
        fetch-tags: 'true'
        submodules: 'true'
    - id: 'step-1'
      uses: 'actions/setup-java@v4'
      with:
        java-version: '21'
        distribution: 'zulu'
        cache: 'gradle'
    - id: 'step-2'
      uses: 'android-actions/setup-android@v3'
    - id: 'step-3'
      uses: 'gradle/actions/setup-gradle@v3'
    - id: 'step-4'
      run: './gradlew testFossReleaseUnitTest'
  integration-tests:
    name: 'Integration tests'
    runs-on: 'ubuntu-latest'
    steps:
    - id: 'step-0'
      name: 'Enable KVM'
      shell: 'bash'
      run: |-
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
    - id: 'step-1'
      uses: 'actions/checkout@v4'
      with:
        fetch-depth: '0'
        fetch-tags: 'true'
        submodules: 'true'
    - id: 'step-2'
      uses: 'actions/setup-java@v4'
      with:
        java-version: '21'
        distribution: 'zulu'
        cache: 'gradle'
    - id: 'step-3'
      uses: 'android-actions/setup-android@v3'
    - id: 'step-4'
      uses: 'gradle/actions/setup-gradle@v3'
    - id: 'step-5'
      uses: './.github/actions/get-avd-info'
      with:
        api-level: '35'
        target: 'google_apis'
    - id: 'step-6'
      uses: 'reactivecircus/android-emulator-runner@v2'
      with:
        api-level: '35'
        arch: '${{ steps.step-5.outputs.arch }}'
        target: '${{ steps.step-5.outputs.target }}'
        script: './gradlew connectedAndroidTest'
  build-release:
    name: 'Build release'
    runs-on: 'ubuntu-latest'
    needs:
    - 'unit-tests'
    - 'integration-tests'
    steps:
    - id: 'step-0'
      name: 'Install JQ'
      run: 'sudo apt-get install jq -y'
    - id: 'step-1'
      uses: 'actions/checkout@v4'
      with:
        fetch-depth: '0'
        fetch-tags: 'true'
        submodules: 'true'
    - id: 'step-2'
      uses: 'actions/setup-java@v4'
      with:
        java-version: '21'
        distribution: 'zulu'
        cache: 'gradle'
    - id: 'step-3'
      uses: 'android-actions/setup-android@v3'
    - id: 'step-4'
      uses: 'gradle/actions/setup-gradle@v3'
    - id: 'step-5'
      uses: 'timheuer/base64-to-file@v1'
      with:
        fileName: 'keystore.jks'
        encodedString: '${{ secrets.KEYSTORE_FILE }}'
    - id: 'step-6'
      env:
        GITHUB_WORKFLOW_RUN_ID: '${{ github.run_id }}'
        KEYSTORE_FILE_PATH: '${{ steps.step-5.outputs.filePath }}'
        KEYSTORE_PASSWORD: '${{ secrets.KEYSTORE_PASSWORD }}'
        KEY_ALIAS: '${{ secrets.KEY_ALIAS }}'
        KEY_PASSWORD: '${{ secrets.KEY_PASSWORD }}'
        FLAVOR_CONFIG: ''
        API_HOST: '${{ vars.API_HOST }}'
      run: './gradlew assembleFossNightly'
    - id: 'step-7'
      env:
        GITHUB_WORKFLOW_RUN_ID: '${{ github.run_id }}'
        KEYSTORE_FILE_PATH: '${{ steps.step-5.outputs.filePath }}'
        KEYSTORE_PASSWORD: '${{ secrets.KEYSTORE_PASSWORD }}'
        KEY_ALIAS: '${{ secrets.KEY_ALIAS }}'
        KEY_PASSWORD: '${{ secrets.KEY_PASSWORD }}'
        FLAVOR_CONFIG: '${{ secrets.PRO_FLAVOR_CONFIG }}'
        API_HOST: '${{ vars.API_HOST }}'
      run: './gradlew assembleProNightly'
    - id: 'step-8'
      name: 'Get output file path'
      env:
        OUTPUT_METADATA_JSON: 'app/build/outputs/apk/foss/nightly/output-metadata.json'
      shell: 'bash'
      run: |-
        echo "VERSION_CODE=$(cat "$OUTPUT_METADATA_JSON" | jq -r '.elements[0].versionCode')" >> "$GITHUB_OUTPUT"
        echo "OUTPUT_FILE=$(cat "$OUTPUT_METADATA_JSON" | jq -r '.elements[0].outputFile')" >> "$GITHUB_OUTPUT"
    - id: 'step-9'
      name: 'Get output file path'
      env:
        OUTPUT_METADATA_JSON: 'app/build/outputs/apk/pro/nightly/output-metadata.json'
      shell: 'bash'
      run: |-
        echo "VERSION_CODE=$(cat "$OUTPUT_METADATA_JSON" | jq -r '.elements[0].versionCode')" >> "$GITHUB_OUTPUT"
        echo "OUTPUT_FILE=$(cat "$OUTPUT_METADATA_JSON" | jq -r '.elements[0].outputFile')" >> "$GITHUB_OUTPUT"
    - id: 'step-10'
      uses: 'actions/upload-artifact@v4'
      with:
        name: 'linksheet-nightly'
        path: |-
          app/build/outputs/apk/foss/nightly/${{ steps.step-8.outputs.OUTPUT_FILE }}
          app/build/outputs/mapping/${{ env.BUILD_FLAVOR_TYPE }}/*.txt
    - id: 'step-11'
      uses: '1fexd/gh-create-release-notes@0.0.13'
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'
        stable-repo: '${{ github.repository }}'
        nightly-repo: '${{ vars.NIGHTLY_REPO_URL }}'
        last-commit-sha: '${{ github.event.before }}'
        commit-sha: '${{ github.sha }}'
    - id: 'step-12'
      env:
        APK_FILE: 'app/build/outputs/apk/foss/nightly/${{ steps.step-8.outputs.OUTPUT_FILE }}'
        NIGHTLY_TAG: '${{ github.ref }}'
        VERSION_CODE: '${{ steps.step-8.outputs.VERSION_CODE }}'
        GITHUB_TOKEN: '${{ secrets.NIGHTLY_REPO_ACCESS_TOKEN }}'
        NIGHTLY_REPO: '${{ vars.NIGHTLY_REPO_URL }}'
        BUILD_FLAVOR: '${{ env.BUILD_FLAVOR }}'
        BUILD_TYPE: '${{ env.BUILD_TYPE }}'
        RELEASE_NOTE: '${{ steps.step-11.outputs.releaseNote }}'
      run: 'gh release create -R "$NIGHTLY_REPO" -t "$VERSION_CODE" "$NIGHTLY_TAG" "$APK_FILE" --latest --notes "$RELEASE_NOTE"'
      if: '${{ contains(vars.ENABLE_RELEASES, true) }}'
    - id: 'step-13'
      env:
        APK_FILE: 'app/build/outputs/apk/pro/nightly/${{ steps.step-9.outputs.OUTPUT_FILE }}'
        NIGHTLY_TAG: '${{ github.ref }}'
        VERSION_CODE: '${{ steps.step-9.outputs.VERSION_CODE }}'
        GITHUB_TOKEN: '${{ secrets.NIGHTLY_PRO_REPO_ACCESS_TOKEN }}'
        NIGHTLY_REPO: '${{ vars.NIGHTLY_PRO_REPO_URL }}'
        BUILD_FLAVOR: '${{ env.BUILD_FLAVOR }}'
        BUILD_TYPE: '${{ env.BUILD_TYPE }}'
        RELEASE_NOTE: '${{ steps.step-11.outputs.releaseNote }}'
      run: 'gh release create -R "$NIGHTLY_REPO" -t "$VERSION_CODE" "$NIGHTLY_TAG" "$APK_FILE" --latest --notes "$RELEASE_NOTE"'
      if: '${{ contains(vars.ENABLE_RELEASES, true) }}'
